app:
  title: Scaffolded Backstage App
  baseUrl: "http://localhost:3000"

organization:
  name: My Company

backend:
  
  secret: "${BACKEND_SECRET_KEY}"
  auth:
    
    externalAccess:
      - type: 'jwks'  # Keep this if needed, or remove it if unnecessary
        secret: "${AUTH_BACKEND_SECRET}"
        options:
          token: "${AUTH_BACKEND_TOKEN}"
          subject: "${GITHUB_USER_ID}"
          url: "http://localhost:7007/api/auth/github/handler/frame"
  events:
    broker: memory
  baseUrl: "http://localhost:7007"
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: "http://localhost:3000"
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true

  database:
    client: better-sqlite3
    connection: ':memory:'
techdocs:
  builder: 'local'  # or 'local'
  publisher:
    type: 'local'  # or your preferred publisher type
    target: '/backstage/docs/output'

integrations:
  github:
    - host: 'github.com'
      token: "${GITHUB_TOKEN}"  # ✅ Use an environment variable

auth:
  environment: development
  providers:
    github:
      development:
        clientId: "${AUTH_GITHUB_CLIENT_ID}" # ✅ Use an environment variable
        clientSecret: "${AUTH_GITHUB_CLIENT_SECRET}"  # ✅ Use an environment variable
    guest: {}

scaffolder:
  locations:
    - type: file
      target: '../template/upload-terraform-and-run-docker.yaml'
  defaultAuthor:
    name: M.C. Hammer
    email: hammer@donthurtem.com
  defaultCommitMessage: "U can't touch this"

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    - type: url
      target: "https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/components/artist-lookup-component.yaml"
      rules:
        - allow: [Template]
  processing:
    subscribeEnabled: false      

kubernetes:
  frontend:
    podDelete:
      enabled: true
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: "http://127.0.0.1:9999"
          name: minikube
          authProvider: 'serviceAccount'
          skipTLSVerify: false
          skipMetricsLookup: true
          serviceAccountToken: "${SERVICE_ACCOUNT_TOKEN}"  # ✅ Use an environment variable
          dashboardUrl: "http://127.0.0.1:64713"
          dashboardApp: standard
          caData: "${K8S_CONFIG_CA_DATA}"
          caFile: 'C:\Users\admin\.minikube\ca.crt'
search:
  engine:
    type: 'memory'  # Or another appropriate search engine type

permission:
  enabled: true
enableExperimentalRedirectFlow: true
